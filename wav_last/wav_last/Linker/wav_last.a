;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <ff.h>
;#include <delay.h>
;
;// Timer2 output compare interrupt service routine
;interrupt [TIM2_COMP] void timer2_comp_isr(void)
; 0000 0007 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0008 disk_timerproc();
;PCODE: $0000000F VOL: 0
; 0000 0009 }
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;
;void main(void)
; 0000 000C {
;PCODE: $00000013 VOL: 0
; 0000 000D     FATFS fs;         /* Рабочая область (file system object) для логических дисков */
; 0000 000E     FIL fp;      /* файловые объекты */
; 0000 000F     unsigned char buffer[20];   /* буфер для копирования данных фала */
; 0000 0010     unsigned int br;         /* счетчик чтения/записи файла */
; 0000 0011 
; 0000 0012 PORTD=0x00;
;PCODE: $00000014 VOL: 0
;	fs -> Y+46
;	fp -> Y+20
;	buffer -> Y+0
;	br -> R16,R17
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0013 DDRD=0x01;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0014 
; 0000 0015 // Timer/Counter 2 initialization
; 0000 0016 // Clock source: System Clock
; 0000 0017 // Clock value: 7,813 kHz
; 0000 0018 // Mode: CTC top=OCR2
; 0000 0019 // OC2 output: Disconnected
; 0000 001A ASSR=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001B TCCR2=0x0F;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 001C TCNT2=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 001D OCR2=0x64;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 001E 
; 0000 001F // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0020 TIMSK=0x80;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0021 
; 0000 0022 #asm("sei")
;PCODE: $00000023 VOL: 0
	sei
;PCODE: $00000024 VOL: 0
; 0000 0023 delay_ms(1000);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0024 
; 0000 0025 disk_initialize(0);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0026 f_mount(0, &fs);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0027 f_open(&fp, "0:/1.txt", FA_OPEN_EXISTING | FA_READ);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0028 f_read(&fp, buffer, 2, &br);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0029 f_close(&fp);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002A 
; 0000 002B if(buffer[0]=='1') //если в файле первый символ 1 то включить светодиод
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 002C {
; 0000 002D PORTD.0=1;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 002E }
; 0000 002F else
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0030 {
; 0000 0031 while(1)
;PCODE: $0000004A VOL: 0
; 0000 0032    {
; 0000 0033 
; 0000 0034 
; 0000 0035   PORTD.0=1;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0036   delay_ms(200);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0037   PORTD.0=0;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0038   delay_ms(200);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0039   }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 003A }
;PCODE: $00000057 VOL: 0
; 0000 003B    while(1);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 003C 
; 0000 003D }
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0

	.DSEG
_0x3:
	.BYTE 0x9
